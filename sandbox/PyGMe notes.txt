game plan:
    split engine into separate files that make sense
    make snake work
        make @Alarm a thing
    unit tests

pygame src:
    https://bitbucket.org/pygame/pygame/src/823708f24a3a95381704a57f8e7ff4e532a8a05f/lib/?at=default
    idk if the version is current

PyGMe
    todo:
        add alarm system with named alarms and looping alarms
        brainstorm for 5 clock minutes how to do collisions symmetrically with no time dependance
            is the ev_postcollision(self) good enough? is it best? should postcollsions just be ev_end_step?? but readability...
            maybe do collisions immediately whenever you move (use @property) and do postcollsions later

howto:
    game loops: fixed time for physics/AI, flexible time for drawing:
        http://gameprogrammingpatterns.com/game-loop.html
    py -> exe:
        https://docs.google.com/document/d/1fRrfvIAiUR8uqZa_KPDWHZAQIkB443-su7j6cEyFPrI/pub
    basic pygame, esp animating
        http://openbookproject.net/thinkcs/python/english3e/pygame.html

